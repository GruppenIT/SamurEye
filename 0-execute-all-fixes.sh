#!/bin/bash

echo "üöÄ SCRIPT MASTER: Execu√ß√£o Completa de Todas as Corre√ß√µes"
echo "========================================================"
echo ""
echo "Este script ir√° executar todas as corre√ß√µes em ordem:"
echo "1Ô∏è‚É£ Diagn√≥stico inicial"
echo "2Ô∏è‚É£ Corre√ß√£o do middleware Vite"
echo "3Ô∏è‚É£ Valida√ß√£o final do sistema"
echo "4Ô∏è‚É£ Integra√ß√£o no install-hard-reset (opcional)"
echo ""

# Verificar se estamos no diret√≥rio correto
if [ ! -f "1-debug-onpremise-auth.sh" ]; then
    echo "‚ùå Scripts n√£o encontrados no diret√≥rio atual"
    echo "   Certifique-se de que todos os scripts est√£o no mesmo diret√≥rio"
    exit 1
fi

# Tornar todos os scripts execut√°veis
chmod +x *.sh

echo "=========================================="
echo "üîç ETAPA 1: DIAGN√ìSTICO INICIAL"
echo "=========================================="
./1-debug-onpremise-auth.sh

echo ""
echo "Pressione ENTER para continuar com a corre√ß√£o ou Ctrl+C para sair..."
read -r

echo ""
echo "=========================================="
echo "üîß ETAPA 2: CORRE√á√ÉO DO MIDDLEWARE VITE"
echo "=========================================="
./2-fix-vite-middleware.sh

echo ""
echo "Pressione ENTER para continuar com a valida√ß√£o ou Ctrl+C para sair..."
read -r

echo ""
echo "=========================================="
echo "‚úÖ ETAPA 3: VALIDA√á√ÉO FINAL"
echo "=========================================="
./3-validate-journey-system.sh

echo ""
echo "=========================================="
echo "üéØ RESULTADO FINAL"
echo "=========================================="

# Testar novamente os endpoints principais
TOKEN="5a774b05-8a8e-4e40-9f83-981320752086"
COLLECTOR_ID="vlxsam04"

echo ""
echo "üß™ TESTES FINAIS:"

# Teste endpoint pending
PENDING=$(curl -s "http://localhost:5000/collector-api/journeys/pending?collector_id=${COLLECTOR_ID}&token=${TOKEN}" 2>/dev/null)
if [[ "$PENDING" == "["* ]]; then
    echo "‚úÖ /collector-api/journeys/pending - OK (JSON)"
else
    echo "‚ùå /collector-api/journeys/pending - FALHOU (HTML)"
fi

# Teste endpoint data
DATA=$(curl -s "http://localhost:5000/collector-api/journeys/test/data?collector_id=${COLLECTOR_ID}&token=${TOKEN}" 2>/dev/null)
if [[ "$DATA" == *"Journey not found"* ]] || [[ "$DATA" == *"{"* ]]; then
    echo "‚úÖ /collector-api/journeys/test/data - OK (JSON)"
    SYSTEM_OK=true
else
    echo "‚ùå /collector-api/journeys/test/data - FALHOU (HTML)"
    SYSTEM_OK=false
fi

echo ""
if [ "$SYSTEM_OK" = true ]; then
    echo "üéâ SUCESSO TOTAL!"
    echo "   ‚úÖ Sistema de execu√ß√£o de jornadas OPERACIONAL"
    echo "   ‚úÖ Collector vlxsam04 pode buscar dados"
    echo "   ‚úÖ Endpoints retornam JSON correto"
    echo ""
    echo "üîß Deseja integrar as corre√ß√µes no install-hard-reset.sh?"
    echo "   (Para que futuras reinstala√ß√µes j√° tenham a corre√ß√£o)"
    echo ""
    echo "Digite 'sim' para integrar ou ENTER para pular:"
    read -r INTEGRATE
    
    if [[ "$INTEGRATE" == "sim" ]] || [[ "$INTEGRATE" == "s" ]]; then
        echo ""
        echo "=========================================="
        echo "üîó ETAPA 4: INTEGRA√á√ÉO NO INSTALL-HARD-RESET"
        echo "=========================================="
        ./4-update-install-hard-reset.sh
    fi
    
    echo ""
    echo "üéØ CORRE√á√ÉO COMPLETA!"
    echo "   O sistema de execu√ß√£o de jornadas est√° totalmente funcional."
    echo "   O collector vlxsam04 agora pode buscar e executar jornadas automaticamente."
else
    echo "‚ùå AINDA H√Å PROBLEMAS"
    echo "   Os endpoints ainda retornam HTML em vez de JSON"
    echo "   Verifique os logs da aplica√ß√£o para mais detalhes"
    echo "   Execute: journalctl -u samureye-app -f"
fi

echo ""
echo "=========================================="
echo "üèÅ EXECU√á√ÉO MASTER CONCLU√çDA"
echo "=========================================="