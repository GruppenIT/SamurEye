#!/bin/bash

# Script de teste para instala√ß√£o vlxsam01
# Executa em ambiente limpo para verificar funcionamento

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() { echo -e "${GREEN}[$(date '+%Y-%m-%d %H:%M:%S')] $1${NC}"; }
warn() { echo -e "${YELLOW}[$(date '+%Y-%m-%d %H:%M:%S')] WARNING: $1${NC}"; }
error() { echo -e "${RED}[$(date '+%Y-%m-%d %H:%M:%S')] ERROR: $1${NC}"; exit 1; }
info() { echo -e "${BLUE}[$(date '+%Y-%m-%d %H:%M:%S')] INFO: $1${NC}"; }

log "üß™ Testando instala√ß√£o do vlxsam01..."

# Verificar se est√° executando como root
if [ "$EUID" -ne 0 ]; then
    error "Execute como root: sudo ./test-install.sh"
fi

# Executar script de instala√ß√£o
log "Executando script de instala√ß√£o..."
curl -fsSL https://raw.githubusercontent.com/GruppenIT/SamurEye/main/docs/deployment/vlxsam01/install.sh | bash

# Verificar se os arquivos foram criados
log "Verificando arquivos criados..."
files_to_check=(
    "/etc/nginx/sites-available/samureye"
    "/etc/nginx/sites-available/samureye-temp"
    "/opt/request-ssl.sh"
    "/opt/request-ssl-wildcard.sh"
    "/opt/samureye/scripts/health-check.sh"
    "/opt/samureye/scripts/check-ssl.sh"
)

for file in "${files_to_check[@]}"; do
    if [ -f "$file" ]; then
        log "‚úÖ $file"
    else
        error "‚ùå $file n√£o encontrado"
    fi
done

# Verificar se NGINX est√° funcionando
log "Verificando NGINX..."
if systemctl is-active --quiet nginx; then
    log "‚úÖ NGINX ativo"
else
    error "‚ùå NGINX n√£o est√° ativo"
fi

# Testar configura√ß√£o NGINX
if nginx -t >/dev/null 2>&1; then
    log "‚úÖ Configura√ß√£o NGINX v√°lida"
else
    error "‚ùå Configura√ß√£o NGINX inv√°lida"
fi

# Testar acesso HTTP local
log "Testando acesso HTTP local..."
if curl -f -s http://localhost/nginx-health >/dev/null 2>&1; then
    log "‚úÖ Health check HTTP funcionando"
else
    warn "‚ö†Ô∏è Health check HTTP n√£o est√° funcionando (normal se vlxsam02 n√£o estiver rodando)"
fi

# Verificar firewall
log "Verificando firewall..."
if ufw status | grep -q "Status: active"; then
    log "‚úÖ UFW ativo"
else
    warn "‚ö†Ô∏è UFW n√£o est√° ativo"
fi

# Verificar portas abertas
log "Verificando portas..."
if netstat -ln | grep -q ":80 "; then
    log "‚úÖ Porta 80 (HTTP) aberta"
else
    error "‚ùå Porta 80 n√£o est√° aberta"
fi

if netstat -ln | grep -q ":443 "; then
    log "‚úÖ Porta 443 (HTTPS) preparada"
else
    warn "‚ö†Ô∏è Porta 443 ainda n√£o configurada (normal sem SSL)"
fi

log "üéâ Teste de instala√ß√£o conclu√≠do com sucesso!"

echo ""
echo "üìã RESULTADO DOS TESTES:"
echo "======================="
echo "‚úÖ Script de instala√ß√£o executado"
echo "‚úÖ Arquivos de configura√ß√£o criados"
echo "‚úÖ NGINX funcionando (configura√ß√£o tempor√°ria)"
echo "‚úÖ Firewall configurado"
echo "‚úÖ Scripts de manuten√ß√£o instalados"
echo ""
echo "üîÑ PR√ìXIMOS PASSOS:"
echo "1. Configurar DNS para samureye.com.br -> $(hostname -I | awk '{print $1}')"
echo "2. Executar: /opt/request-ssl.sh"
echo "3. Testar com: /opt/samureye/scripts/check-ssl.sh"
echo ""
echo "‚ö†Ô∏è  NOTA: SSL ser√° configurado ap√≥s executar /opt/request-ssl.sh"